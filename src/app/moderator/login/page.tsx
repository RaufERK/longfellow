'use client'

import { useState } from 'react'
import { useRouter } from 'next/navigation'

export default function ModeratorLogin() {
  const [password, setPassword] = useState('')
  const [error, setError] = useState('')
  const [isLoading, setIsLoading] = useState(false)
  const router = useRouter()

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsLoading(true)
    setError('')

    console.log('üîê –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –ª–æ–≥–∏–Ω–∞...')

    try {
      const response = await fetch('/api/moderator/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ password }),
      })

      console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.status, response.statusText)

      const data = await response.json()
      console.log('üìÑ –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data)

      if (response.ok) {
        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º...')
        router.push('/moderator')
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', data.error)
        setError(data.error || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏')
      }
    } catch (error) {
      console.error('üí• –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error)
      setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏')
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <div
      className='min-h-screen flex items-center justify-center bg-[#ccffcc]'
      style={{ fontFamily: 'Times, Times New Roman, serif' }}
    >
      <div className='bg-white p-8 rounded-lg shadow-lg w-full max-w-md'>
        <h1
          className='text-2xl font-bold text-center mb-6'
          style={{ fontSize: '24px' }}
        >
          üîê –í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω–∫—É
        </h1>

        <form onSubmit={handleSubmit} className='space-y-4'>
          <div>
            <label
              htmlFor='password'
              className='block text-lg font-medium mb-2'
              style={{ fontSize: '18px' }}
            >
              –ü–∞—Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:
            </label>
            <input
              id='password'
              type='password'
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className='w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-lg'
              style={{ fontSize: '18px' }}
              placeholder='–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å'
              required
            />
          </div>

          {error && (
            <div
              className='text-red-600 text-center font-medium'
              style={{ fontSize: '18px' }}
            >
              {error}
            </div>
          )}

          <button
            type='submit'
            disabled={isLoading}
            className='w-full bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white font-bold py-3 px-4 rounded-lg transition duration-200'
            style={{ fontSize: '18px' }}
          >
            {isLoading ? '‚è≥ –í—Ö–æ–¥...' : 'üöÄ –í–æ–π—Ç–∏'}
          </button>
        </form>

        <div
          className='mt-6 text-center text-gray-600'
          style={{ fontSize: '18px' }}
        >
          <p>–î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å–∞–π—Ç–∞</p>
        </div>
      </div>
    </div>
  )
}
